{"version":3,"sources":["components/Footer.jsx","components/Header.jsx","components/Cell.jsx","App.js","index.js"],"names":["Footer","id","Header","Cell","props","Grid","item","xs","Button","onClick","i","className","value","color","App","useState","setColor","gameTable","setGameTable","history","setHistory","showWinner","setShowWinner","winnerColor","setWinnerColor","winnerMsg","setWinnerMsg","changeTurn","checkColor","p","chooseCell","newHistory","push","newGameTable","length","isGameFinished","checkForWinner","newGame","cells","Backdrop","sx","zIndex","theme","drawer","open","style","Container","container","spacing","pop","undo","fontSize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.084b7a13.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div id=\"footer\">\r\n          <p>Designed by <b>Saeed Ahmadnia</b></p>\r\n          <p>December 2021</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div id=\"title\">\r\n          <h1>Tic-Tac-Toe</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nexport const Cell = (props) => {\r\n      \r\n    function buttonClassName() {\r\n        if (props.value===null) {\r\n            if (props.color==='blue') {\r\n                return 'game-table-blue';\r\n            } else {\r\n                return 'game-table-red';\r\n            }\r\n        } else if (props.value==='blue') {\r\n            return 'game-table-disabled';\r\n        } else {\r\n            return 'game-table-disabled';\r\n        }\r\n    }\r\n\r\n    function gradientBlueClassName() {\r\n        if (props.value===null)\r\n            return '-disabled';\r\n        if (props.value==='red')\r\n            return '-disabled';\r\n        return '';\r\n    }\r\n\r\n    function gradientRedClassName() {\r\n        if (props.value===null)\r\n            return '-disabled';\r\n        if (props.value==='blue')\r\n            return '-disabled';\r\n        return '';\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={4}>\r\n            <Button onClick={() => props.onClick(props.i)} className={buttonClassName()} >\r\n                <div className={\"gradient gradient-blue\" + gradientBlueClassName()}></div>\r\n                <div className={\"gradient gradient-red\" + gradientRedClassName()}></div>\r\n            </Button>\r\n        </Grid>\r\n    )\r\n}\r\n","import './App.css';\nimport React, { useState } from 'react';\nimport Container from '@mui/material/Container';\nimport { Footer } from './components/Footer';\nimport { Header } from './components/Header';\nimport { Cell } from './components/Cell';\nimport Grid from '@mui/material/Grid';\nimport { Button } from '@mui/material';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport UndoIcon from '@mui/icons-material/Undo';\nimport Backdrop from '@mui/material/Backdrop';\n\nfunction App() {\n  const [color, setColor] = useState('blue');\n  const [gameTable, setGameTable] = useState([null, null, null, null, null, null, null, null, null]);\n  const [history, setHistory] = useState([]);\n\n  const [showWinner, setShowWinner] = useState(false);\n  const [winnerColor, setWinnerColor] = useState('light-blue');\n  const [winnerMsg, setWinnerMsg] = useState('BLUE WINS!');\n\n  function changeTurn() {\n    setColor(color==='blue'? 'red':'blue');\n  }\n\n  function closeWinner() {\n    setShowWinner(false);\n    newGame();\n  }\n\n  function checkColor(p, gameTable) {\n    if (gameTable[0]===p && gameTable[3]===p && gameTable[6]===p)\n      return true;\n    if (gameTable[1]===p && gameTable[4]===p && gameTable[7]===p)\n      return true;\n    if (gameTable[2]===p && gameTable[5]===p && gameTable[8]===p)\n      return true;\n\n    if (gameTable[0]===p && gameTable[1]===p && gameTable[2]===p)\n      return true;\n    if (gameTable[3]===p && gameTable[4]===p && gameTable[5]===p)\n      return true;\n    if (gameTable[6]===p && gameTable[7]===p && gameTable[8]===p)\n      return true;\n\n    if (gameTable[0]===p && gameTable[4]===p && gameTable[8]===p)\n      return true;\n    if (gameTable[2]===p && gameTable[4]===p && gameTable[6]===p)\n      return true;\n\n    return false;\n  }\n\n  function isGameFinished(gameTable) {\n    for (var i = 0; i < gameTable.length; i++) {\n      if (gameTable[i] === null)\n        return false;\n    }\n    return true;\n  }\n\n  function checkForWinner(gameTable) {\n    if (checkColor('blue', gameTable)) {\n      setWinnerMsg('BLUE WINS!');\n      setWinnerColor('#007FFF');\n      setShowWinner(true);\n      return true;\n    }\n    if (checkColor('red', gameTable)) {\n      setWinnerMsg('RED WINS!');\n      setWinnerColor('#FF0055');\n      setShowWinner(true);\n      return true;\n    }\n    if (isGameFinished(gameTable)) {\n      setWinnerMsg('DRAW!');\n      setWinnerColor('#FFF');\n      setShowWinner(true);\n      return true;\n    }\n    return false;\n  }\n\n  function chooseCell(i) {\n    let newHistory = [...history];\n    newHistory.push(gameTable)\n    setHistory(newHistory);\n\n    let newGameTable = [...gameTable];\n    newGameTable[i] = color;\n    setGameTable(newGameTable);\n\n    if (checkForWinner(newGameTable)) {\n      return;\n    }\n\n    changeTurn();\n  }\n\n  function undo() {\n    if (history.length > 0) {\n      let newHistory = [...history];\n      setGameTable(newHistory.pop());\n      setHistory(newHistory);\n      changeTurn();\n    }\n  }\n\n  function newGame() {\n    setColor('blue');\n    setGameTable([null, null, null, null, null, null, null, null, null]);\n    setHistory([]);\n  }\n\n  var cells = [];\n  for (var i = 0; i < 9; i++) {\n    cells.push(<Cell key={i} color={color} value={gameTable[i]} i={i} onClick={chooseCell}/>);\n  }\n\n  return (\n    <div className={\"App bg-dark-\" + color + \" light-\" + color}>\n      <Backdrop\n        sx={{ color: winnerColor, zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={showWinner}\n        onClick={() => closeWinner()}\n      >\n        <p style={{'font-size': '4em'}}>{winnerMsg}</p>\n      </Backdrop>\n      <Container className=\"container\">\n        <Header />\n\n        <Grid container spacing={1}>\n          {cells}\n\n          <Grid item xs={5}> <Button className={'btn-' + color} onClick={() => undo()}>\n          <UndoIcon fontSize='small'/> Undo\n          </Button> </Grid>\n\n          <Grid item xs={2}> <div id='label-turn'>\n            <p><b>{color==='blue'?'Blue':'Red'}</b></p>\n          </div> </Grid>\n\n          <Grid item xs={5}> <Button className={'btn-' + color} onClick={() => newGame()}>\n            <AddCircleIcon fontSize='small'/> New Game\n          </Button> </Grid>\n        </Grid>\n\n        <Footer />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}